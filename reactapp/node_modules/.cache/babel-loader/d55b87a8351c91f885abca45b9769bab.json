{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\floco\\\\Desktop\\\\lacapsule\\\\semaine6\\\\morningnews\\\\part4\\\\backup2\\\\mnpart4\\\\reactapp\\\\src\\\\ScreenSource.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { gsap } from \"gsap\";\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\n\nfunction ScreenSource() {\n  const [toggle, setToggle] = useState(false);\n  const [sourceList, setSourceList] = useState([]);\n  const [langue, setLangue] = useState(\"fr\");\n  const [pays, setPays] = useState(\"fr\");\n\n  const changeState = () => {\n    setToggle(!toggle);\n  };\n\n  const avatRef = useRef(null);\n  useEffect(() => {\n    gsap.to(avatRef.current, {\n      bounce: 100,\n      duration: 1.2\n    });\n\n    const apiques = async () => {\n      const apireq = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${pays}&apiKey=9a4637363ab14af2b5e9bd6bd48b4bab`);\n      const apires = await apireq.json();\n      setSourceList(apires.sources);\n      console.log(langue, pays);\n    };\n\n    apiques();\n  }, [langue, pays]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flag\",\n    onClick: changeState,\n    ref: avatRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: {\n      cursor: \"pointer\"\n    },\n    size: 65,\n    src: \"./images/fr.png\",\n    onClick: () => {\n      setLangue(\"fr\");\n      setPays(\"fr\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    style: {\n      cursor: \"pointer\"\n    },\n    size: 65,\n    src: \"./images/ang.png\",\n    onClick: () => {\n      setLangue(\"en\");\n      setPays(\"gb\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["C:/Users/floco/Desktop/lacapsule/semaine6/morningnews/part4/backup2/mnpart4/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","useRef","gsap","Link","List","Avatar","Nav","ScreenSource","toggle","setToggle","sourceList","setSourceList","langue","setLangue","pays","setPays","changeState","avatRef","to","current","bounce","duration","apiques","apireq","fetch","apires","json","sources","console","log","cursor","source","category","id","name","description"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {gsap} from \"gsap\";\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css';\r\nimport { List, Avatar} from 'antd';\r\nimport Nav from './Nav'\r\n\r\nfunction ScreenSource() {\r\n  const[toggle, setToggle] = useState(false)\r\n  const [sourceList, setSourceList] = useState([])\r\n  const [langue, setLangue] = useState(\"fr\");\r\n  const [pays, setPays] = useState(\"fr\");\r\n  const changeState = () => {\r\n    setToggle(!toggle)\r\n  };\r\n  const avatRef = useRef(null)\r\n  useEffect(() => {\r\n    gsap.to(avatRef.current, {\r\n      bounce: 100,\r\n      duration: 1.2\r\n    })\r\n\r\n    const apiques= async() => {\r\n      const apireq = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${pays}&apiKey=9a4637363ab14af2b5e9bd6bd48b4bab`)\r\n      const apires = await apireq.json()\r\n      setSourceList(apires.sources)\r\n      console.log(langue, pays)\r\n    }\r\n    apiques()\r\n  }, [langue, pays])\r\n  return (\r\n    <div>\r\n      <Nav/>\r\n        <div className=\"Banner\">\r\n        <div className=\"flag\" onClick={changeState} ref={avatRef}>\r\n          <Avatar\r\n            style={{ cursor: \"pointer\" }}\r\n            size={65}\r\n            src=\"./images/fr.png\"\r\n            onClick={() => {\r\n              setLangue(\"fr\");\r\n              setPays(\"fr\");\r\n            }}\r\n          />\r\n          <Avatar\r\n            style={{ cursor: \"pointer\" }}\r\n            size={65}\r\n            src=\"./images/ang.png\"\r\n            onClick={() => {\r\n              setLangue(\"en\");\r\n              setPays(\"gb\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n       <div className=\"HomeThemes\">\r\n          \r\n              <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={sourceList}\r\n                  renderItem={source => (\r\n                    <List.Item>\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\r\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\r\n                        description={source.description}\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n          </div>    \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ScreenSource;\r\n"]},"metadata":{},"sourceType":"module"}